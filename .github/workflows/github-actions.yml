jobs:
  int-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Ambry
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Set up MySQL
      run: 'sudo systemctl start mysql.service

        mysql -e ''CREATE DATABASE AccountMetadata;'' -uroot -proot

        mysql -e ''USE AccountMetadata; SOURCE ./ambry-account/src/main/resources/AccountSchema.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE ambry_container_storage_stats;'' -uroot -proot

        mysql -e ''USE ambry_container_storage_stats; SOURCE ./ambry-mysql/src/main/resources/AmbryContainerStorageStats.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE AmbryNamedBlobs;'' -uroot -proot

        mysql -e ''USE AmbryNamedBlobs; SOURCE ./ambry-named-mysql/src/main/resources/NamedBlobsSchema.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE AmbryRepairRequests;'' -uroot -proot

        mysql -e ''USE AmbryRepairRequests; SOURCE ./ambry-mysql/src/main/resources/AmbryRepairRequests.ddl;''
        -uroot -proot

        '
    - continue-on-error: true
      name: Add custom MySQL user
      run: 'mysql -e ''CREATE USER ''travis''@''localhost'';'' -uroot -proot

        mysql -e ''GRANT ALL PRIVILEGES ON * . * TO ''travis''@''localhost'';'' -uroot
        -proot

        mysql -e ''FLUSH PRIVILEGES;'' -uroot -proot

        '
    - continue-on-error: true
      name: Run integration tests excluding server integration test
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan intTest -x :ambry-server:intTest codeCoverageReport
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Upload coverage to Codecov
      timeout-minutes: 2
      uses: codecov/codecov-action@v4
  publish:
    env:
      ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs:
    - unit-test
    - store-test
    - int-test
    - server-int-test
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Ambry
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Build artifacts and create pom files
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan assemble publishToMavenLocal
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Test publication by uploading in dry run mode
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: -i --scan artifactoryPublishAll -Partifactory.dryRun
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Tag and upload to JFrog Artifactory
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: -i --scan ciPerformRelease
        gradle-version: wrapper
        job-id: jdk11
  server-int-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Ambry
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Set up MySQL
      run: 'sudo systemctl start mysql.service

        mysql -e ''CREATE DATABASE AccountMetadata;'' -uroot -proot

        mysql -e ''USE AccountMetadata; SOURCE ./ambry-account/src/main/resources/AccountSchema.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE ambry_container_storage_stats;'' -uroot -proot

        mysql -e ''USE ambry_container_storage_stats; SOURCE ./ambry-mysql/src/main/resources/AmbryContainerStorageStats.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE AmbryNamedBlobs;'' -uroot -proot

        mysql -e ''USE AmbryNamedBlobs; SOURCE ./ambry-named-mysql/src/main/resources/NamedBlobsSchema.ddl;''
        -uroot -proot

        mysql -e ''CREATE DATABASE AmbryRepairRequests;'' -uroot -proot

        mysql -e ''USE AmbryRepairRequests; SOURCE ./ambry-mysql/src/main/resources/AmbryRepairRequests.ddl;''
        -uroot -proot

        '
    - continue-on-error: true
      name: Add custom MySQL user
      run: 'mysql -e ''CREATE USER ''travis''@''localhost'';'' -uroot -proot

        mysql -e ''GRANT ALL PRIVILEGES ON * . * TO ''travis''@''localhost'';'' -uroot
        -proot

        mysql -e ''FLUSH PRIVILEGES;'' -uroot -proot

        '
    - continue-on-error: true
      name: Run integration tests
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan :ambry-server:intTest codeCoverageReport
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Upload coverage to Codecov
      timeout-minutes: 2
      uses: codecov/codecov-action@v4
  store-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Ambry
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Run unit tests for ambry-store
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan :ambry-store:test codeCoverageReport
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Upload coverage to Codecov
      timeout-minutes: 2
      uses: codecov/codecov-action@v4
  unit-test:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Ambry
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      name: Set up MySQL
      run: 'sudo systemctl start mysql.service

        mysql -e ''CREATE DATABASE AmbryRepairRequests;'' -uroot -proot

        mysql -e ''USE AmbryRepairRequests; SOURCE ./ambry-mysql/src/main/resources/AmbryRepairRequests.ddl;''
        -uroot -proot

        '
    - continue-on-error: true
      name: Add custom MySQL user
      run: 'mysql -e ''CREATE USER ''travis''@''localhost'';'' -uroot -proot

        mysql -e ''GRANT ALL PRIVILEGES ON * . * TO ''travis''@''localhost'';'' -uroot
        -proot

        mysql -e ''FLUSH PRIVILEGES;'' -uroot -proot

        '
    - continue-on-error: true
      name: Install and run Azurite
      run: 'killall azurite || true

        npm install -g azurite

        azurite --silent &

        '
    - continue-on-error: true
      name: Run unit tests excluding ambry-store
      uses: burrunan/gradle-cache-action@v1
      with:
        arguments: --scan -x :ambry-store:test build codeCoverageReport
        gradle-version: wrapper
        job-id: jdk11
    - continue-on-error: true
      name: Upload coverage to Codecov
      timeout-minutes: 2
      uses: codecov/codecov-action@v4
name: Github Actions CI
on:
  repository_dispatch:
    types: trigger-ga___github-actions.yml
